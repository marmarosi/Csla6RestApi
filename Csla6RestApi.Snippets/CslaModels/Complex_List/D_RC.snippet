<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
			<Title>DAL | Read-only root collection</Title>
			<Author>Mármarosi József</Author>
			<Description>Defines the data access of the read-only root collection.</Description>
			<Shortcut>c6cl-rc-d</Shortcut>
        </Header>
        <Snippet>
            <Code Language="CSharp">
                <![CDATA[/// <summary>
    /// Implements the data access functions of the read-only $RootName$ collection.
    /// </summary>
    [DalImplementation]
    public class $RootModel$ListDal : DalBase<SqlServerContext>, I$RootModel$ListDal
    {
        #region Constructor

        /// <summary>
        /// Instantiates the data access object.
        /// </summary>
        /// <param name="context">The database context.</param>
        public $RootModel$ListDal(
            SqlServerContext dbContext
            )
        {
            DbContext = dbContext;
        }

        #endregion Constructor

        #region Fetch

        /// <summary>
        /// Gets the specified $RootName$s.
        /// </summary>
        /// <param name="criteria">The criteria of the $RootName$ list.</param>
        /// <returns>The requested $RootName$ items.</returns>
        public List<$RootModel$ListItemDao> Fetch(
            $RootModel$ListCriteria criteria
            )
        {
            var list = DbContext.$RootModel$s
                .Include(e => e.$ChildModel$s)
                .Where(e =>
                    criteria.$RootModel$Name == null || e.$RootModel$Name.Contains(criteria.$RootModel$Name)
                )
                .Select(e => new $RootModel$ListItemDao
                {
                    $RootModel$Key = e.$RootModel$Key,
                    $RootModel$Code = e.$RootModel$Code,
                    $RootModel$Name = e.$RootModel$Name,
                    $ChildModel$s = e.$ChildModel$s.Select(i => new $ChildModel$InfoDao
                    {
                        $ChildModel$Key = i.$ChildModel$Key,
                        $ChildModel$Code = i.$ChildModel$Code,
                        $ChildModel$Name = i.$ChildModel$Name
                    })
                    .OrderBy(io => io.$ChildModel$Name)
                    .ToList()
                })
                .OrderBy(o => o.$RootModel$Name)
                .AsNoTracking()
                .ToList();

            return list;
        }

        #endregion GetList
    }]]>
            </Code>
            <Declarations>
                <Literal>
                    <ID>RootModel</ID>
                    <ToolTip>The name of the root model.</ToolTip>
                    <Default>RootModel</Default>
                </Literal>
                <Literal>
                    <ID>RootName</ID>
                    <ToolTip>The model name in comments.</ToolTip>
                    <Default>RootName</Default>
                </Literal>
				<Literal>
					<ID>ChildModel</ID>
					<ToolTip>The name of the child model.</ToolTip>
					<Default>ChildModel</Default>
				</Literal>
			</Declarations>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
